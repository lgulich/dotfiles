#!/bin/bash

# Automatically load scripting addition.
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# Global settings
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off

# Appearance
yabai -m config window_shadow                on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90

# Borders
yabai -m config window_border                off
yabai -m config window_border_width          5
yabai -m config active_window_border_color   0x8098c379
yabai -m config normal_window_border_color   0x80555555
yabai -m config insert_feedback_color        0xffd75f5f

# Mouse
yabai -m config mouse_follows_focus          on
yabai -m config focus_follows_mouse          on
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# General space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  5
yabai -m config bottom_padding               5
yabai -m config left_padding                 5
yabai -m config right_padding                5
yabai -m config window_gap                   5

num_spaces=10
num_displays=$(yabai -m query --displays | jq '. | length')
num_existing_spaces=$(yabai -m query --spaces | jq '. | length')

if [ "$num_displays" -eq "2" ]; then
  main_display=2
  support_display=1
elif [ "$num_displays" -eq "1" ]; then
  main_display=1
  support_display=1
fi

# Set up the correct amount of spaces.
if [ "$num_existing_spaces" -lt "$num_spaces" ]; then
  yabai -m display --focus "${main_display}"
  for (( i=num_existing_spaces; i<num_spaces; i++ )); do
    echo "Creating space ${i}."
    yabai -m space --create
  done
fi

if [ "$num_existing_spaces" -gt "$num_spaces" ]; then
  yabai -m display --focus "${main_display}"
  for (( i=num_spaces; i<num_existing_spaces; i++ )); do
    echo "Destroying space ${i}."
    yabai -m space --destroy
  done
fi

# Label the spaces.
yabai -m space 1 --label term
yabai -m space 2 --label browser
yabai -m space 3 --label code
yabai -m space 4 --label compile
yabai -m space 5 --label varia1
yabai -m space 6 --label varia2
yabai -m space 7 --label calendar
yabai -m space 8 --label organisation
yabai -m space 9 --label mail
yabai -m space 10 --label chat


# We only want the initial terminals to be in space term.
yabai -m rule --add app=Alacritty space=term label=terminal
yabai -m rule --remove terminal

yabai -m rule --add app=Brave space=browser
yabai -m rule --add app='Brave Browser Beta' space=browser
yabai -m rule --add app=Atom space=code
yabai -m rule --add app=Code space=code
yabai -m rule --add app=Mail space=mail
yabai -m rule --add app=Spark space=mail
yabai -m rule --add app=Franz space=chat
yabai -m rule --add app=Ferdi space=chat
yabai -m rule --add app=WhatsApp space=chat
yabai -m rule --add app=Signal space=chat
yabai -m rule --add app=Spotify space=chat
yabai -m rule --add app=Teams space=calendar
yabai -m rule --add app=Calendar space=calendar
yabai -m rule --add app=Reminders space=organisation
yabai -m rule --add app=Notes space=organisation

yabai -m space --focus chat
yabai -m space --focus term
yabai -m display --focus "${main_display}"
echo "yabai configuration loaded..."
